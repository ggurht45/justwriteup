% Chapter Template

\chapter{Background}

\label{Chapter1} 

\begin{comment}
----------------------------------------------------------------------------------------
%								Chapter layout
2. Background
	a. Leap Motion (v2)
		i. Java API
		ii. Native Libraries
		iii. Limitations of Sensor and Documentation
	b. JavaFx
		i. Java vs FXML
		ii. SceneBuilder
		iii. Jfoenix
		iv. ControlsFx
	c. IntelliJ IDE
		i. Unix Style Terminal on Windows
----------------------------------------------------------------------------------------		
\end{comment}



%----------------------------------------------------------------------------------------
%	SECTION 1 Leap Motion (v2)
%----------------------------------------------------------------------------------------

\section{Leap Motion (v2)}
--introduction to the sensor. when it was made. company behind it. what its used for. price



%----------------------------------- Leap Motion Java API
\subsection{Java API}
hand class, fingers bones. vector. 



%----------------------------------- Native Libraries
\subsection{Native Libraries}
--read the page on lm website and summarize




%----------------------------------- Limitations of Sensor and Documentation
\subsection{Limitations of Sensor and Documentation}
--occulusion
--discontinuation of publishing v2 apps
--sensor resetting by opening palm
--not enough documentation for linux/ubuntu. 




%----------------------------------------------------------------------------------------
%	SECTION 2 JavaFX
%----------------------------------------------------------------------------------------

\section{JavaFx}

JavaFX is a framework provided by Oracle Corporation that is intended to replace the Swing framework as the standard GUI library for developing desktop applications that can be run on any platform that supports Java. Since the JavaFX 2.0 release, JavaFX application can be written in pure Java code. Before that release, applications written using JavaFX libraries had to be written in Java FX Script, a scripting language designed and used specifically for the purpose of creating GUI applications with JavaFX. This project uses the latest version of this framework, JavaFX 8, which also added support for 3D graphics and sensor support. 


%----------------------------------- Java vs FXML
\subsection{Java vs FXML}


When writing a JavaFX application, there are two very different approaches that can be used to create the actual user interface (UI) for the application. These are pure Java code and FXML. A brief introduction both of these approaches will be given below. 

The pure Java approach constructs the JavaFX application scene graph procedurally through code. Below is a simple “Hello World” program that shows a quick example of this approach in action.



%----------------------------------- SceneBuilder
\subsection{SceneBuilder}
--explain what scenbuilder is. mention gluon. how
--how to use it. 
-- show different windows and what they mean. 